{
  "hash": "3a87ca37b090eaf9b05741edc9406f1f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: '평활화 기법 소개'\ndate: '2022-10-03'\ncategories: ['Bayesian smoothing',\"Time series\"]\ndescription: '평활화 기법을 연재하며 '\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n베이즈 평활화(Bayesian Smoothing)은 비모수 회귀분석(nonparametric regression)의 한 방법으로 여러 방면에서 응용되고 있는 기법이다. 앞으로 지속적인 포스팅을 통하여 베이즈 평활기법의 이론적 부분과 다양한 응용사례를 실제 데이터와 예제 코드를 통하여 소개하고자 한다. \n\n평활화 기법의 접근방법도 전통적 빈도주의(frequentist) 입장과 베이즈주의(Bayesian) 입장으로 나누어 볼 수 있다. 이번 포스트에서는 전통적인 빈도주의 입장에서 벌점우도(penalized likelihood)의 측면에서 평활화의 개념을 설명하고, 시계열 데이터에 대한 응을 사례를 살펴보고자 한다.\n\n\n### 1. 평활화 문제의 설정 (Settings)\n\n전통적인 평활화 기법은 주로 시계열 관측값(종속변수)가 정규 분포를 따르는 시계열 자료라고 가정하고, 연속하는 추세값의 차이가 크게 벌어지는 경우 이에 대한 벌점을 부여하여 매끄러운 추세선을 만드는 것을 의미한다. \n\n우리가 $T$ 기간동안 동일한 간격으로 관측한 시계열 자료를 가지고 있다고 생각해 보자. \n우리의 관심은 이 시계열 자료의 내제적인 추세를 구하고자 한다. \n이 시계열에 대한 관측값을 $y_1,\\ldots, y_T$라고 하고, 추세를 $\\mu_1,\\ldots, \\mu_T$라고 하면 다음과 같이 모형을 설정할 수 있다.\n$$\ny_t=\\mu_t+\\varepsilon_t,\\quad t=1,\\ldots, T\n$$\n\n여기서 $\\varepsilon_1,\\ldots,\\varepsilon_T$ 를 $E(\\varepsilon_t)=0,\\;\\forall t$ 를 만족하는 독립인 오차항을 나타낸다.\n\n\n평활화 문제를 실제 데이터에 적용해 보자. \n아래 코드는 1990년 이후 월평균 원달러 환율 데이터를 line 그래프로 나타낸 것이다. \n\n::: panel-tabset\n### R ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(zoo)\nlibrary(getMFdata)\n\ndata(usdkrw)\n\nusdkrw <- \n  usdkrw %>% \n  mutate(yearmon=as.yearmon(yearmon))\n\nggplot(data=usdkrw,aes(yearmon,usdkrw))+\n  geom_line()+\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](smoothing1_files/figure-html/unnamed-chunk-1-1.png){width=768}\n:::\n:::\n\n\n### R plotly\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(zoo)\nlibrary(plotly)\nlibrary(getMFdata)\n\ndata(usdkrw)\n\nusdkrw <- \n  usdkrw %>% \n  mutate(yearmon=as.yearmon(yearmon))\n\nplot_ly(data=usdkrw,x=~yearmon,y=~usdkrw) %>% \n  add_lines()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-48e14b94b175a9e69730\" style=\"width:100%;height:325px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-48e14b94b175a9e69730\">{\"x\":{\"visdat\":{\"2f27458d7a36\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"2f27458d7a36\",\"attrs\":{\"2f27458d7a36\":{\"x\":{},\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"mode\":\"lines\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"yearmon\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"usdkrw\"},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1990,1990.0833333333333,1990.1666666666667,1990.25,1990.3333333333333,1990.4166666666667,1990.5,1990.5833333333333,1990.6666666666667,1990.75,1990.8333333333333,1990.9166666666667,1991,1991.0833333333333,1991.1666666666667,1991.25,1991.3333333333333,1991.4166666666667,1991.5,1991.5833333333333,1991.6666666666667,1991.75,1991.8333333333333,1991.9166666666667,1992,1992.0833333333333,1992.1666666666667,1992.25,1992.3333333333333,1992.4166666666667,1992.5,1992.5833333333333,1992.6666666666667,1992.75,1992.8333333333333,1992.9166666666667,1993,1993.0833333333333,1993.1666666666667,1993.25,1993.3333333333333,1993.4166666666667,1993.5,1993.5833333333333,1993.6666666666667,1993.75,1993.8333333333333,1993.9166666666667,1994,1994.0833333333333,1994.1666666666667,1994.25,1994.3333333333333,1994.4166666666667,1994.5,1994.5833333333333,1994.6666666666667,1994.75,1994.8333333333333,1994.9166666666667,1995,1995.0833333333333,1995.1666666666667,1995.25,1995.3333333333333,1995.4166666666667,1995.5,1995.5833333333333,1995.6666666666667,1995.75,1995.8333333333333,1995.9166666666667,1996,1996.0833333333333,1996.1666666666667,1996.25,1996.3333333333333,1996.4166666666667,1996.5,1996.5833333333333,1996.6666666666667,1996.75,1996.8333333333333,1996.9166666666667,1997,1997.0833333333333,1997.1666666666667,1997.25,1997.3333333333333,1997.4166666666667,1997.5,1997.5833333333333,1997.6666666666667,1997.75,1997.8333333333333,1997.9166666666667,1998,1998.0833333333333,1998.1666666666667,1998.25,1998.3333333333333,1998.4166666666667,1998.5,1998.5833333333333,1998.6666666666667,1998.75,1998.8333333333333,1998.9166666666667,1999,1999.0833333333333,1999.1666666666667,1999.25,1999.3333333333333,1999.4166666666667,1999.5,1999.5833333333333,1999.6666666666667,1999.75,1999.8333333333333,1999.9166666666667,2000,2000.0833333333333,2000.1666666666667,2000.25,2000.3333333333333,2000.4166666666667,2000.5,2000.5833333333333,2000.6666666666667,2000.75,2000.8333333333333,2000.9166666666667,2001,2001.0833333333333,2001.1666666666667,2001.25,2001.3333333333333,2001.4166666666667,2001.5,2001.5833333333333,2001.6666666666667,2001.75,2001.8333333333333,2001.9166666666667,2002,2002.0833333333333,2002.1666666666667,2002.25,2002.3333333333333,2002.4166666666667,2002.5,2002.5833333333333,2002.6666666666667,2002.75,2002.8333333333333,2002.9166666666667,2003,2003.0833333333333,2003.1666666666667,2003.25,2003.3333333333333,2003.4166666666667,2003.5,2003.5833333333333,2003.6666666666667,2003.75,2003.8333333333333,2003.9166666666667,2004,2004.0833333333333,2004.1666666666667,2004.25,2004.3333333333333,2004.4166666666667,2004.5,2004.5833333333333,2004.6666666666667,2004.75,2004.8333333333333,2004.9166666666667,2005,2005.0833333333333,2005.1666666666667,2005.25,2005.3333333333333,2005.4166666666667,2005.5,2005.5833333333333,2005.6666666666667,2005.75,2005.8333333333333,2005.9166666666667,2006,2006.0833333333333,2006.1666666666667,2006.25,2006.3333333333333,2006.4166666666667,2006.5,2006.5833333333333,2006.6666666666667,2006.75,2006.8333333333333,2006.9166666666667,2007,2007.0833333333333,2007.1666666666667,2007.25,2007.3333333333333,2007.4166666666667,2007.5,2007.5833333333333,2007.6666666666667,2007.75,2007.8333333333333,2007.9166666666667,2008,2008.0833333333333,2008.1666666666667,2008.25,2008.3333333333333,2008.4166666666667,2008.5,2008.5833333333333,2008.6666666666667,2008.75,2008.8333333333333,2008.9166666666667,2009,2009.0833333333333,2009.1666666666667,2009.25,2009.3333333333333,2009.4166666666667,2009.5,2009.5833333333333,2009.6666666666667,2009.75,2009.8333333333333,2009.9166666666667,2010,2010.0833333333333,2010.1666666666667,2010.25,2010.3333333333333,2010.4166666666667,2010.5,2010.5833333333333,2010.6666666666667,2010.75,2010.8333333333333,2010.9166666666667,2011,2011.0833333333333,2011.1666666666667,2011.25,2011.3333333333333,2011.4166666666667,2011.5,2011.5833333333333,2011.6666666666667,2011.75,2011.8333333333333,2011.9166666666667,2012,2012.0833333333333,2012.1666666666667,2012.25,2012.3333333333333,2012.4166666666667,2012.5,2012.5833333333333,2012.6666666666667,2012.75,2012.8333333333333,2012.9166666666667,2013,2013.0833333333333,2013.1666666666667,2013.25,2013.3333333333333,2013.4166666666667,2013.5,2013.5833333333333,2013.6666666666667,2013.75,2013.8333333333333,2013.9166666666667,2014,2014.0833333333333,2014.1666666666667,2014.25,2014.3333333333333,2014.4166666666667,2014.5,2014.5833333333333,2014.6666666666667,2014.75,2014.8333333333333,2014.9166666666667,2015,2015.0833333333333,2015.1666666666667,2015.25,2015.3333333333333,2015.4166666666667,2015.5,2015.5833333333333,2015.6666666666667,2015.75,2015.8333333333333,2015.9166666666667,2016,2016.0833333333333,2016.1666666666667,2016.25,2016.3333333333333,2016.4166666666667,2016.5,2016.5833333333333,2016.6666666666667,2016.75,2016.8333333333333,2016.9166666666667,2017,2017.0833333333333,2017.1666666666667,2017.25,2017.3333333333333,2017.4166666666667,2017.5,2017.5833333333333,2017.6666666666667,2017.75,2017.8333333333333,2017.9166666666667,2018,2018.0833333333333,2018.1666666666667,2018.25,2018.3333333333333,2018.4166666666667,2018.5,2018.5833333333333,2018.6666666666667,2018.75,2018.8333333333333,2018.9166666666667,2019,2019.0833333333333,2019.1666666666667,2019.25,2019.3333333333333,2019.4166666666667,2019.5,2019.5833333333333,2019.6666666666667,2019.75,2019.8333333333333,2019.9166666666667,2020,2020.0833333333333,2020.1666666666667,2020.25,2020.3333333333333,2020.4166666666667,2020.5,2020.5833333333333,2020.6666666666667,2020.75,2020.8333333333333,2020.9166666666667,2021,2021.0833333333333,2021.1666666666667,2021.25,2021.3333333333333,2021.4166666666667,2021.5,2021.5833333333333,2021.6666666666667,2021.75,2021.8333333333333,2021.9166666666667,2022,2022.0833333333333,2022.1666666666667,2022.25,2022.3333333333333,2022.4166666666667,2022.5,2022.5833333333333,2022.6666666666667,2022.75,2022.8333333333333,2022.9166666666667,2023,2023.0833333333333,2023.1666666666667,2023.25,2023.3333333333333,2023.4166666666667,2023.5,2023.5833333333333,2023.6666666666667,2023.75,2023.8333333333333,2023.9166666666667,2024,2024.0833333333333],\"y\":[683.42999999999995,689.87,697.77999999999997,706.02999999999997,709.25999999999999,715.33000000000004,715.94000000000005,715.53999999999996,714.96000000000004,715,714.32000000000005,715.73000000000002,718.13999999999999,721.61000000000001,725.11000000000001,725.48000000000002,725.13,725.37,728.96000000000004,731.12,739.74000000000001,748.96000000000004,753.04999999999995,757.27999999999997,762.65999999999997,765.74000000000001,771.19000000000005,778.27999999999997,782.77999999999997,789.07000000000005,787.14999999999998,789.32000000000005,785.54999999999995,783.64999999999998,784.03999999999996,788.62,791.99000000000001,796.45000000000005,793.25,795.78999999999996,799.99000000000001,802.67999999999995,806.20000000000005,808.80999999999995,808.57000000000005,810.21000000000004,807.12,809.39999999999998,810.48000000000002,809.23000000000002,807.53999999999996,808.55999999999995,806.54999999999995,806.63999999999999,805.12,803.46000000000004,800.73000000000002,798.75999999999999,796.33000000000004,791.86000000000001,790.48000000000002,790.73000000000002,778.69000000000005,767.5,761.39999999999998,761.03999999999996,757.00999999999999,767.96000000000004,772.35000000000002,767.39999999999998,769.40999999999997,771.08000000000004,787.26999999999998,780.27999999999997,781.25,780.42999999999995,780.15999999999997,797.96000000000004,812.75999999999999,816.80999999999995,821.75999999999999,827.61000000000001,828.17999999999995,839.01999999999998,849.88,866.85000000000002,879.40999999999997,893.55999999999995,892.04999999999995,889.49000000000001,890.5,895.89999999999998,909.52999999999997,921.85000000000002,1025.5799999999999,1484.0799999999999,1706.8,1623.0599999999999,1505.28,1391.97,1394.6199999999999,1397.1800000000001,1300.77,1303.22,1370.8,1336.72,1294.1300000000001,1213.6500000000001,1176.9400000000001,1186.8099999999999,1229.1600000000001,1208.9400000000001,1197,1169.6300000000001,1186.04,1199.79,1196.97,1206.3800000000001,1177.22,1138.3900000000001,1131.0699999999999,1128.8,1117.1900000000001,1109.76,1120.01,1118.73,1114.8599999999999,1114.5699999999999,1116.5,1127.3099999999999,1151.1500000000001,1214.4000000000001,1272.8199999999999,1252.4400000000001,1288.4300000000001,1325.55,1298.46,1293.8299999999999,1302.5999999999999,1285.3900000000001,1293.7,1302.5999999999999,1284,1289.6600000000001,1317.5999999999999,1318.72,1322.51,1318.9300000000001,1266.0599999999999,1223.47,1185.1199999999999,1196.3699999999999,1208.5,1241.1300000000001,1211.9100000000001,1208.9100000000001,1179.27,1191.1900000000001,1232.4000000000001,1232.8199999999999,1199.78,1194.02,1181.5899999999999,1178.4200000000001,1166.1700000000001,1166.27,1184.8699999999999,1192.95,1184.3199999999999,1166.6900000000001,1166.3399999999999,1150.8499999999999,1177.3699999999999,1158.6500000000001,1157.6600000000001,1159,1147.97,1144.04,1091.1900000000001,1050.9100000000001,1038.23,1022.4299999999999,1007.49,1010.9400000000001,1002.21,1010.87,1037.4400000000001,1021.17,1029.3299999999999,1046.25,1041.4300000000001,1024.1500000000001,987.02999999999997,970.22000000000003,975.09000000000003,954.44000000000005,941.39999999999998,955.15999999999997,950.14999999999998,960.72000000000003,953.67999999999995,954.23000000000002,936.22000000000003,925.75,936.36000000000001,937.01999999999998,943.25999999999999,931.5,927.90999999999997,928.32000000000005,918.85000000000002,933.79999999999995,932.40999999999997,915.86000000000001,916.98000000000002,930.24000000000001,942.38999999999999,944.69000000000005,979.86000000000001,986.65999999999997,1036.73,1029.27,1019.12,1041.54,1130.4000000000001,1326.9200000000001,1390.0899999999999,1373.8399999999999,1346.0999999999999,1429.46,1461.98,1341.9000000000001,1258.71,1261.3499999999999,1263.97,1238.4000000000001,1219.1500000000001,1175.25,1164.23,1166.45,1138.8199999999999,1157.0799999999999,1137.6400000000001,1117.1099999999999,1163.1099999999999,1212.3299999999999,1207.3,1179.9200000000001,1167.01,1123.45,1126.2,1147.55,1120.0699999999999,1118.1400000000001,1122.45,1086.8399999999999,1083.54,1081.27,1059.5,1073.1700000000001,1118.6099999999999,1155.45,1132.3099999999999,1147.45,1145.8499999999999,1123.3499999999999,1125.9000000000001,1135.55,1154.27,1165.51,1143.3599999999999,1131.6900000000001,1124.78,1106.9300000000001,1087.52,1076.97,1065.3499999999999,1086.6800000000001,1102.2,1121.8299999999999,1110.6700000000001,1135.21,1127.23,1116.98,1087.3499999999999,1066.8,1062.8199999999999,1056.6700000000001,1064.75,1071.3,1070.8900000000001,1044.55,1024.99,1019.36,1019.9299999999999,1025.3599999999999,1033.24,1060.28,1095.0999999999999,1104.3299999999999,1088.8599999999999,1098.4000000000001,1112.5699999999999,1088.6600000000001,1091.27,1112.2,1143.22,1179.0999999999999,1184.76,1148.1800000000001,1151.97,1172.24,1201.6700000000001,1217.3499999999999,1188.21,1147.51,1171.51,1170.5,1144.0899999999999,1111.6800000000001,1107.49,1125.28,1161.6400000000001,1182.28,1185.0999999999999,1144.9200000000001,1134.77,1132.73,1125.28,1130.04,1134.4000000000001,1130.79,1131.5899999999999,1131.5699999999999,1105.04,1085.78,1066.7,1079.5799999999999,1071.8900000000001,1067.76,1076.3900000000001,1092.8,1122.8,1121.1500000000001,1120.5999999999999,1130.8099999999999,1128.5799999999999,1122.9000000000001,1122,1122.45,1130.72,1140.95,1183.29,1175.6199999999999,1175.3099999999999,1208.98,1197.55,1184.1300000000001,1167.45,1175.8399999999999,1164.28,1193.79,1220.0899999999999,1225.23,1228.6700000000001,1210.01,1198.9000000000001,1186.8499999999999,1178.8,1144.6800000000001,1116.76,1095.1300000000001,1097.49,1111.72,1131.02,1119.4000000000001,1123.28,1121.3,1143.98,1160.3399999999999,1169.54,1182.8199999999999,1182.9100000000001,1183.7,1194.01,1198.3399999999999,1221.03,1232.3399999999999,1269.8800000000001,1277.3499999999999,1307.4000000000001,1318.4400000000001,1391.5899999999999,1426.6600000000001,1364.0999999999999,1296.22,1247.25,1270.74,1305.73,1320.01,1328.21,1296.71,1286.3,1318.47,1329.47,1350.6900000000001,1310.3900000000001,1303.98,1323.5699999999999,1331.74],\"type\":\"scatter\",\"mode\":\"lines\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n:::\n\n\n### 2. 벌점최소제곱기준 (PLS)\n\nWhittaker는 다음과 같이 벌점최소제곱 (penalised least square; PLS) 기준을 최소하는 방법으로 $\\boldsymbol\\mu$ 를 추정하였다. \n$$\n\\text{PLS}(\\boldsymbol \\mu)=\\sum_{t=1}^T (y_t-\\mu_t)^2+\\lambda\\sum_{t=3}^T (\\mu_t-2\\mu_{t-1}+\\mu_{t-2})^2\n$$\nPLS를 최소화하기 위해서는 두 가지 요건을 동시에 만족해야 한다. 우선 추세 $\\mu_t$ 가 해당 시점의 관측치 $y_t$와 가까워야 하고, 둘째 $t$ 시점의 추세가 $t-1$ 시점의 추세에서 크게 벗어나지 않고 매끄러워야 한다.\n추세의 매끄러움은 시계열과 추세간 차이에 대한 최소제곱에 다음과 같이 벌점항을 추가하여 고려할 수 있다. \n$$\n\\text{pen}(\\boldsymbol\\mu)=\\sum_{t=3}^T(\\mu_t-2\\mu_{t-1}+\\mu_{t-2})^2=\\sum_{t=3}^T(\\triangle^2\\mu_t)^2\n$$\n 파라미터 $\\lambda$ 는 두 가지 요건의 상충관계에서 어느쪽에 가중치를 둘 것인지를 결정한다. 여기서 오차항 $\\varepsilon_t$ 가 독립이고, 모든 $t$ 에 대하여 동일한 분산, $Var(\\varepsilon_t)=\\sigma^2$ 이라고 가정한다. 일반적으로 $\\mu_t$ 의 편차에 대한 $d$ 차 벌점은 다음과 같이 정의한다. \n$$\n\\text{pen}(\\boldsymbol\\mu) = \\sum_{t=d+1}^T (\\triangle^d\\mu_t)^2,\\quad \\triangle^d \\mu_t=\\triangle^{d-1}\\mu_t-\\triangle^{d-1}\\mu_{t-1}\n$$\n$d=1$ 인 경우 수평선 $\\mu_t=a$ 로부터 편차에 대하여 벌점을 부과하고, $d=2$ 인 경우 직선 $\\mu_t=a+bt$ 로부터의 편차에 벌점을 부과한다. 일반적으로 $d$ 차 벌점은 차수 $d-1$ 차 다항식으로부터 편차에 대하여 벌점을 부과한다.\n\n\n### 3. 행렬표현 (Matrix notation)\n\n이제 벌점항을 행렬로 간단히 표기하는 법을 알아보자. $\\mu_1,\\ldots,\\mu_T$ 에 대한 1차 차분 행렬은 다음과 같이 주어진다. \n$$\n\\mathbf D_1^{(T-1)\\times T}=\\begin{pmatrix}-1& 1 &0& \\cdots& 0\\\\ \\vdots&-1&1&&\\vdots\\\\0&\\cdots&&-1&1\\\\\\end{pmatrix},\\qquad \\mathbf D_1^{(T-1)\\times T}\\boldsymbol\\gamma=\\begin{pmatrix}\\mu_2-\\mu_1 \\\\ \\cdots\\\\ \\mu_T-\\mu_{T-1}\\\\\\end{pmatrix}\n$$\n 일반적인 고차 차분행렬은 다음 식을 이용하여 순차적으로 구할 수 있다.\n$$\n\\mathbf D_d^{(T-d)\\times T}=\\mathbf D_1^{(T-d)\\times (T-d+1)}\\mathbf D_{d-1}^{(T-d+1)\\times T}\n$$\n예를 들어 2차 차분행렬은 $\\mathbf D_1^{(T-2)\\times (T-1)}\\times \\mathbf D_1^{(T-1)\\times T}$ 로부터 \n$$\n\\mathbf D_2^{(T-2)\\times T}=\\begin{pmatrix}1& -2 &1& &\\cdots& 0\\\\ &1&-2&1&\\\\\\vdots&&\\ddots&\\ddots&\\ddots&\\vdots\\\\0 &&&1&-2&1\\\\\\end{pmatrix}\n$$\n 이다. 이제 차분행렬 $D$로 부터 벌점행렬 $K$ 를 구해보자. 벌점항을 다시 정리하면 \n$$\n\\text{pen}(\\boldsymbol\\mu)=\\sum_{t=d+1}^T (\\triangle^d\\mu_t)^2=\\boldsymbol\\mu \\mathbf D_d'\\mathbf D_d\\boldsymbol\\mu=\\boldsymbol\\mu \\mathbf K_d \\boldsymbol\\mu\n$$\n여기서 $\\mathbf K_d=\\mathbf D_d'\\mathbf D_d$ 로 $T\\times T$ 차원의 벌점행렬을 만든다. 1차 벌점행렬과 2차 벌점행렬을 구하면 다음과 같다.\n$$\n\\small\n\\mathbf K_1 = \\begin{pmatrix}1&-1&&&\\cdots&0\\\\-1&2&-1&&\\cdots&0\\\\0&-1&2&-1&\\cdots&0\\\\\\vdots&&&\\ddots&\\ddots&\\vdots\\\\0&0&\\cdots&-1&2&-1\\\\ 0&0&\\cdots&0&-1&1\\end{pmatrix},\\qquad \\mathbf K_2=\\begin{pmatrix}1&-2&1&&&\\cdots&0\\\\-2&5&-4&1&&\\cdots&0\\\\1&-4&6&-4&1&\\cdots&0\\\\\\vdots&&&\\ddots&\\ddots&&\\vdots\\\\0&0&\\cdots&1&-4&5&-2\\\\ 0&0&\\cdots&&1&-2&1\\end{pmatrix}\n$$\n\n\n여기서 벌점행렬의 랭크는 $\\text{rank}(\\mathbf K_d)=T-d$ 로 완전한 랭크를 갖지 않는다. 따라서, 벌점을 적용받지 않는 $d-1$차까지의 다항식은 $\\mathbf K_d$ 의 널공간(null space)을 형성한다. 이제 모형을 행렬과 벡터를 이용하여 다시 정의하자. \n$$\n\\text{PLS}(\\boldsymbol\\mu)=(\\mathbf y-\\boldsymbol\\mu)'(\\mathbf y-\\boldsymbol\\mu)+\\lambda\\boldsymbol\\mu'\\mathbf K\\boldsymbol\\mu = \\mathbf y '\\mathbf y -2\\boldsymbol\\mu'\\mathbf y+\\boldsymbol\\mu'(\\mathbf I +\\lambda\\mathbf K)\\boldsymbol\\mu\n$$\n\n### 4. 추론 (Inference)\n\n이제는 최소제곱기준을 극대화시키는 $\\boldsymbol\\mu$를 구해보자.     \n극대값을 구하기 위하여 PLS 기준을 미분하면 \n$$\n\\frac{\\partial \\text{PLS}(\\boldsymbol\\mu)}{\\partial\\boldsymbol\\mu}=-2\\mathbf y + 2(\\mathbf I +\\lambda \\mathbf K )\\boldsymbol\\mu=0\\quad \\Rightarrow\\quad \\hat{\\boldsymbol\\mu}=(I+\\lambda \\mathbf K)^{-1}\\mathbf y\n$$\nPLS 추정량(estimator)은 능형회귀 (ridge shrinkage) 추정량과 동일하게 관측치 $y$ 를 부드러운 추세 $\\mu$의 값으로 끌어 당기는 현상이 나타난다. PLS 추정량의 기대값과 분산은 다음과 같다.\n\n>1. PLS 추정량은 편의 추정량(biased)이다. 즉, \n$$E(\\hat{\\boldsymbol\\mu})=E[(\\mathbf I +\\lambda \\mathbf K)^{-1}\\mathbf y)=(\\mathbf I+\\lambda\\mathbf K)^{-1}\\boldsymbol\\mu.$$\n>2.  오차항을 i.i.d.라 가정하면 분산은 \n$$Cov(\\hat{\\mathbf\\mu})=(\\mathbf I+\\lambda\\mathbf K)^{-1}Cov(\\mathbf y)(\\mathbf I+\\lambda\\mathbf K)^{-1}=\\sigma^2(\\mathbf I+\\lambda\\mathbf K)^{-1}$$\n\nPLS 추정치는 분산을 줄임으로써 평균제곱오차(mean squared error; MSE)를 감소시킨다. $\\lambda$의 값이 작으면 편차가 작아지지만 변동성이 크고, $\\lambda$의 값이 크면 변동성은 적지만 편차가 커진다. 마지막으로 오차가 iid인 가우스 분포를 따른다고 하면, 즉 $\\varepsilon_t\\sim N(0,\\sigma^2)$ 이면 PLS 추정량의 분포는 다음과 같다.\n$$\n\\hat{\\boldsymbol\\mu}\\sim N((\\mathbf I+\\lambda\\mathbf K)^{-1}\\mathbf y,\\sigma^2(I+\\lambda\\mathbf K)^{-2})\n$$\n\n",
    "supporting": [
      "smoothing1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}